{"ast":null,"code":"var _jsxFileName = \"/Users/ranierymendes/Documents/nlw/web/src/Pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nimport logo from \"../../assets/logo.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from \"../../services/api\";\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectedUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectedCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectedItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    await api.post('points', data);\n    alert('Ponto de Coleta Criado');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }), \"Voltar Para Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, \"  Cadastro do Ponto de Coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Nome da Entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Selecione o Endere\\xE7o no Mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"Estado\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectedUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectedCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"Selecione uma Cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Itens de Coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Selecione um ou mais itens abaixo \")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectedItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, \"Cadastrar Ponto de Coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/Users/ranierymendes/Documents/nlw/web/src/Pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","formData","setFormData","name","email","whatsapp","history","navigator","geolocation","getCurrentPosition","position","console","log","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectedUf","event","target","value","handleSelectedCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectedItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","post","alert","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, ChangeEvent, FormEvent} from 'react';\nimport \"./style.css\";\nimport logo from \"../../assets/logo.svg\";\n\nimport {Link, useHistory} from \"react-router-dom\";\nimport {FiArrowLeft} from \"react-icons/fi\";\nimport {Map, TileLayer, Marker} from 'react-leaflet'\nimport api from \"../../services/api\";\nimport axios from 'axios';\nimport {LeafletMouseEvent} from 'leaflet';\nimport { func } from 'prop-types';\n//estado para array ou objeto, obrigatoriamente temos que infrmar o type do object\n\ninterface Item{\n    id:number;\n    title:string;\n    image_url:string; \n}\n\ninterface IBGEUFResponse{\n    sigla: string;\n}\n\ninterface IBGECityReponse{\n    nome:string; \n}\n\nconst CreatePoint = () =>{\n\n    const [items, setItems] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([]);\n    const [cities, setCities] = useState<string[]>([]);\n\n    const[initialPosition, setInitialPosition]= useState<[number, number]>([0, 0])\n    const[selectedUf, setSelectedUf] = useState('0');\n    const[selectedCity, setSelectedCity] = useState('0');\n    const [selectedItems, setSelectedItems] = useState<number[]>([])\n    const[selectedPosition, setSelectedPosition]= useState<[number, number]>([0, 0])\n    const[formData, setFormData] = useState({\n        name:'',\n        email:'',\n        whatsapp:'',\n    })\n\n    const history = useHistory();\n\n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition(position =>{\n            console.log(position)\n            const{latitude, longitude} =  position.coords;\n            setInitialPosition([latitude, longitude]);\n        })\n\n    }, [])\n\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data);\n        })\n\n    },   []);\n\n    useEffect(() =>{\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla); \n\n            setUfs(ufInitials);\n        });\n    } ,[]);\n\n    useEffect(()=>{\n\n        if(selectedUf === '0' ){\n            return ;\n        }\n        axios\n        .get<IBGECityReponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n            const cityNames = response.data.map(city => city.nome); \n            setCities(cityNames);\n\n    })\n\n\n    }, [selectedUf]);\n\n    function handleSelectedUf(event:ChangeEvent<HTMLSelectElement> ){\n        const uf = event.target.value;\n        setSelectedUf(uf);\n    }\n\n    function handleSelectedCity(event:ChangeEvent<HTMLSelectElement> ){\n        const city = event.target.value;\n        setSelectedCity(city);  \n    }\n\n    function handleMapClick(event: LeafletMouseEvent){\n        setSelectedPosition([\n            event.latlng.lat,\n            event.latlng.lng,\n        ])\n    }\n\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\n        const{name, value} = event.target; \n\n        setFormData({...formData, [name]:value});\n    }\n\n    function handleSelectedItem(id:number){\n\n        const alreadySelected = selectedItems.findIndex(item => item === id);\n\n        if (alreadySelected >= 0){\n            const filteredItems = selectedItems.filter(item => item !== id);\n\n            setSelectedItems(filteredItems)\n\n        }else{\n\n        setSelectedItems([...selectedItems, id])\n        }\n    }\n\n    async function handleSubmit(event: FormEvent){\n        event.preventDefault();\n\n        const {name, email, whatsapp} = formData;\n        const uf =selectedUf;\n        const city = selectedCity;\n        const [latitude, longitude] = selectedPosition;\n        const items = selectedItems;\n\n        const data = {\n            name,\n            email,\n            whatsapp,\n            uf,\n            city,\n            latitude,\n            longitude, \n            items\n        };\n\n        await api.post('points', data);\n\n        alert('Ponto de Coleta Criado');\n\n        history.push('/')\n        \n    }\nreturn (\n    <div id=\"page-create-point\">\n        <header>\n            <img src={logo} alt=\"ecoleta\"></img>\n            <Link to=\"/\">\n                <FiArrowLeft/>\n                Voltar Para Home\n                \n            </Link>\n        </header>\n\n\n        <form onSubmit={handleSubmit}>\n\n    <h1>  Cadastro do Ponto de Coleta</h1>\n\n    <fieldset>\n        <legend>\n            <h2>Dados</h2>\n        </legend>\n\n        <div className=\"field\">\n            <label htmlFor=\"name\">Nome da Entidade</label>\n            <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={handleInputChange}\n            />\n        </div>\n\n        <div className=\"field-group\">\n        <div className=\"field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            onChange={handleInputChange}\n            />\n        </div>\n        <div className=\"field\">\n            <label htmlFor=\"whatsapp\">Whatsapp</label>\n            <input\n            type=\"text\"\n            name=\"whatsapp\"\n            id=\"whatsapp\"\n            onChange={handleInputChange}\n            />\n        </div>\n\n        </div>\n    </fieldset>\n\n\n\n    <fieldset>\n        <legend>\n            <h2>Endereço</h2>\n            <span>Selecione o Endereço no Mapa</span>\n        </legend>\n\n        <Map center={initialPosition} zoom={15} onClick={handleMapClick}> \n            <TileLayer \n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n\n          <Marker position={selectedPosition}/>\n        </Map>\n\n    <div className=\"field-group\">\n        <div className=\"field\">\n\n            <label htmlFor=\"uf\">Estado</label>\n            <select name=\"uf\" \n            id=\"uf\" \n            value={selectedUf} \n            onChange={handleSelectedUf}>\n\n            <option value=\"0\">Selecione uma UF</option>\n            {ufs.map(uf =>(\n                <option key={uf} value={uf}>{uf}</option>\n            ))}\n            </select>\n        </div>\n    <div className=\"field\">\n            <label htmlFor=\"city\">Cidade</label>\n            <select name=\"city\" \n            id=\"city\"\n            value={selectedCity}\n            onChange={handleSelectedCity}>\n            <option value=\"0\">Selecione uma Cidade</option>\n            {cities.map(city =>(\n                <option key={city} value={city}>{city}</option>\n            ))}\n            </select>\n     </div>\n    </div>\n\n    </fieldset>\n\n\n\n\n    <fieldset>\n        <legend>\n            <h2>Itens de Coleta</h2>\n            <span>Selecione um ou mais itens abaixo </span>\n        </legend>\n        <ul className=\"items-grid\">\n            {items.map(item => (\n            <li key= {item.id} onClick={()=> handleSelectedItem(item.id)}\n            className={selectedItems.includes(item.id) ? 'selected' : ''}\n            >\n                <img src={item.image_url} alt={item.title}/>\n                <span>{item.title}</span> \n            </li> \n            ))}\n        </ul>\n    </fieldset>\n\n    <button type=\"submit\">\n        Cadastrar Ponto de Coleta\n    </button>\n\n        </form>\n    </div>\n)\n};\n\nexport default CreatePoint;\n"]},"metadata":{},"sourceType":"module"}