{"ast":null,"code":"var _jsxFileName = \"/Users/ranierymendes/Documents/nlw/web/src/Pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nimport logo from \"../../assets/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from \"../../services/api\";\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectedUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectedCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), \"Voltar Para Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"  Cadastro do Ponto de Coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Nome da Entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Selecione o Endere\\xE7o no Mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Estado\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectedUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectedCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Selecione uma Cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Itens de Coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Selecione um ou mais itens abaixo \")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, \"Cadastrar Ponto de Coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/Users/ranierymendes/Documents/nlw/web/src/Pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","formData","setFormData","name","email","whatsapp","navigator","geolocation","getCurrentPosition","position","console","log","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectedUf","event","target","value","handleSelectedCity","handleMapClick","latlng","lat","lng","handleInputChange","logo","item","id","image_url","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, ChangeEvent} from 'react';\nimport \"./style.css\";\nimport logo from \"../../assets/logo.svg\";\n\nimport {Link} from \"react-router-dom\";\nimport {FiArrowLeft} from \"react-icons/fi\";\nimport {Map, TileLayer, Marker} from 'react-leaflet'\nimport api from \"../../services/api\";\nimport axios from 'axios';\nimport {LeafletMouseEvent} from 'leaflet';\n//estado para array ou objeto, obrigatoriamente temos que infrmar o type do object\n\ninterface Item{\n    id:number;\n    title:string;\n    image_url:string; \n}\n\ninterface IBGEUFResponse{\n    sigla: string;\n}\n\ninterface IBGECityReponse{\n    nome:string; \n}\n\nconst CreatePoint = () =>{\n\n    const [items, setItems] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([]);\n    const [cities, setCities] = useState<string[]>([]);\n\n    const[initialPosition, setInitialPosition]= useState<[number, number]>([0, 0])\n    const[selectedUf, setSelectedUf] = useState('0');\n    const[selectedCity, setSelectedCity] = useState('0');\n    const[selectedPosition, setSelectedPosition]= useState<[number, number]>([0, 0])\n    const[formData, setFormData] = useState({\n        name:'',\n        email:'',\n        whatsapp:'',\n    })\n\n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition(position =>{\n            console.log(position)\n            const{latitude, longitude} =  position.coords;\n            setInitialPosition([latitude, longitude]);\n        })\n\n    }, [])\n\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data);\n        })\n\n    },   []);\n\n    useEffect(() =>{\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla); \n\n            setUfs(ufInitials);\n        });\n    } ,[]);\n\n    useEffect(()=>{\n\n        if(selectedUf === '0' ){\n            return ;\n        }\n        axios\n        .get<IBGECityReponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n            const cityNames = response.data.map(city => city.nome); \n            setCities(cityNames);\n\n    })\n\n\n    }, [selectedUf]);\n\n    function handleSelectedUf(event:ChangeEvent<HTMLSelectElement> ){\n        const uf = event.target.value;\n        setSelectedUf(uf);\n    }\n\n    function handleSelectedCity(event:ChangeEvent<HTMLSelectElement> ){\n        const city = event.target.value;\n        setSelectedCity(city);  \n    }\n\n    function handleMapClick(event: LeafletMouseEvent){\n        setSelectedPosition([\n            event.latlng.lat,\n            event.latlng.lng,\n        ])\n    }\n\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\n        const{name, value} = event.target; \n\n        setFormData({...formData, [name]:value});\n    }\n\nreturn (\n    <div id=\"page-create-point\">\n        <header>\n            <img src={logo} alt=\"ecoleta\"></img>\n            <Link to=\"/\">\n                <FiArrowLeft/>\n                Voltar Para Home\n                \n            </Link>\n        </header>\n\n\n        <form>\n\n    <h1>  Cadastro do Ponto de Coleta</h1>\n\n    <fieldset>\n        <legend>\n            <h2>Dados</h2>\n        </legend>\n\n        <div className=\"field\">\n            <label htmlFor=\"name\">Nome da Entidade</label>\n            <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={handleInputChange}\n            />\n        </div>\n\n        <div className=\"field-group\">\n        <div className=\"field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            onChange={handleInputChange}\n            />\n        </div>\n        <div className=\"field\">\n            <label htmlFor=\"whatsapp\">Whatsapp</label>\n            <input\n            type=\"text\"\n            name=\"whatsapp\"\n            id=\"whatsapp\"\n            onChange={handleInputChange}\n            />\n        </div>\n\n        </div>\n    </fieldset>\n\n\n\n    <fieldset>\n        <legend>\n            <h2>Endereço</h2>\n            <span>Selecione o Endereço no Mapa</span>\n        </legend>\n\n        <Map center={initialPosition} zoom={15} onClick={handleMapClick}> \n            <TileLayer \n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n\n          <Marker position={selectedPosition}/>\n        </Map>\n\n    <div className=\"field-group\">\n        <div className=\"field\">\n\n            <label htmlFor=\"uf\">Estado</label>\n            <select name=\"uf\" \n            id=\"uf\" \n            value={selectedUf} \n            onChange={handleSelectedUf}>\n\n            <option value=\"0\">Selecione uma UF</option>\n            {ufs.map(uf =>(\n                <option key={uf} value={uf}>{uf}</option>\n            ))}\n            </select>\n        </div>\n    <div className=\"field\">\n            <label htmlFor=\"city\">Cidade</label>\n            <select name=\"city\" \n            id=\"city\"\n            value={selectedCity}\n            onChange={handleSelectedCity}>\n            <option value=\"0\">Selecione uma Cidade</option>\n            {cities.map(city =>(\n                <option key={city} value={city}>{city}</option>\n            ))}\n            </select>\n     </div>\n    </div>\n\n    </fieldset>\n\n\n\n\n    <fieldset>\n        <legend>\n            <h2>Itens de Coleta</h2>\n            <span>Selecione um ou mais itens abaixo </span>\n        </legend>\n        <ul className=\"items-grid\">\n            {items.map(item => (\n            <li key= {item.id}>\n                <img src={item.image_url} alt={item.title}/>\n                <span>{item.title}</span> \n            </li> \n            ))}\n        </ul>\n    </fieldset>\n\n    <button type=\"submit\">\n        Cadastrar Ponto de Coleta\n    </button>\n\n        </form>\n    </div>\n)\n};\n\nexport default CreatePoint;\n"]},"metadata":{},"sourceType":"module"}